// CAN'T USE WRENCH
var wrench = require('wrench'),
	fs = require('fs'),
	path = require('path');

var NODE_MODULES_REGEX = /(?:^|\/)node_modules/;

task('post:compile', function(config, logger){
	logger.info(JSON.stringify(config));

	var platformDir = config.alloyConfig.platform === 'ios' ? 'iphone' : config.alloyConfig.platform;
	var srcDir = path.join(config.dir.resources, platformDir);
	var files = wrench.readdirSyncRecursive(srcDir);

	files.forEach(function(file) {
		var fullpath = path.join(srcDir, file);
		if (/\.js$/.test(file) && fs.statSync(fullpath).isFile() && !NODE_MODULES_REGEX.test(file)) {
			wrapFile(file, fullpath);
		}
	});
});

function wrapFile(file, fullpath) {
	var filename = '/modules/' + file;
	var code = '(function(tirequire,__dirname,__filename){';
	if (file === 'app.js') {
		code += 'var module={exports:{}};';
		code += 'var exports = module.exports;';
	}
	code += 'module.loaded=false;';
	code += 'module.id=__filename.replace(/\\.(?:js|json)$/,"");';
	code += 'module.filename=__filename;';
	code += 'module.parent={};';
	code += 'module.children=[];';
	code += 'var require=tirequire("ti-node-require")(__dirname,module);';
	code += 'module.require=require;';
	code += fs.readFileSync(fullpath, 'utf8');
	code += '\nmodule.loaded=true;})(require,"' + path.dirname(filename) + '","' + filename + '");';
	fs.writeFileSync(fullpath, code);
}